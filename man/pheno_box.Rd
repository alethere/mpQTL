% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz_fun.R
\name{pheno_box}
\alias{pheno_box}
\title{Phenotype-genotype boxplot}
\usage{
pheno_box(
  phe,
  gen,
  haplotype = FALSE,
  ploidy = NULL,
  hap.select = NULL,
  coltype = NULL,
  h = NULL,
  l = NULL,
  draw.points = TRUE,
  ...
)
}
\arguments{
\item{phe}{Numeric vector of phenotypes.}

\item{gen}{If haplotype = FALSE, numeric vector of same length as phe. If
haplotype = TRUE, vector of length(phe)*ploidy.}

\item{haplotype}{Logical, does gen contain haplotypes?}

\item{ploidy}{Integer, if haplotype = TRUE, ploidy of the individuals.}

\item{hap.select}{vector, if haplotype = TRUE, names of the haplotypes
to be drawn. All by default.}

\item{coltype}{Either "sequential", "qualitative" (default), "divergent" or "rainbow".
For a few categories, such as different treatments, choose "qualitative" or "rainbow".
For ordered categories, such as increasingly high levels of a compound, use
"sequential". For a gradient between two opposites, chose "divergent".}

\item{h}{One or two values between 0 and 360 (degrees in the colour wheel) to represent hue.
Default is c(120,240). If "qualitative" or "divergent" is used, the two hues will correspond
to each end of the colour
gradient. Otherwise only the first hue will be used. For reference, 0 is red, 140 is green, 240
is blue 300 is purple and 360 is back to red.}

\item{l}{Value between 0 and 100 (default 60). Represents brightness, or the amount of white}

\item{draw.points}{Logical, should points be drawn? Defaults to TRUE.}

\item{...}{Additional parameters to \code{boxplot} (not xlim and ylim).}
}
\value{
A boxplot grouping phenotypes per dosage of each genotype.
}
\description{
Plots a phenotype boxplot per dosage of SNPs / per haplotype, with overlapped
points.
}
\examples{
## Get example genotypes and phenotypes of tetraploid individuals
data("mpsnpdose")
mpsnpdose[1:5,1:5]
data("mphapdose")
mphapdose[1:5,1:9]
data("mppheno")
head(mppheno)

## pheno_box of the first SNP
pheno_box(phe = mppheno, gen = mpsnpdose[1,])
pheno_box(phe = mppheno, gen = mphapdose[1,], haplotype = TRUE, ploidy = 4)

}
